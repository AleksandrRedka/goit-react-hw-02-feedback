{"version":3,"sources":["components/Statistics/Statictics.module.css","components/Buttons/Buttons.module.css","components/Title/Title.module.css","components/Notification/Notification.module.css","components/Title/Title.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Buttons/Buttons.js","components/App/App.js","index.js"],"names":["module","exports","Title","text","className","styles","headerTitle","Statistics","good","neutral","bad","total","statList","statItem","statTotal","Math","round","Notification","message","notifi","Buttons","options","leaveFeedback","reset","boxButton","map","item","button","key","type","name","onClick","e","buttonReset","App","state","totalFeedbacks","target","setState","prevState","resetFeedback","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,SAAW,6BAA6B,SAAW,6BAA6B,UAAY,gC,gBCA9GD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,OAAS,wBAAwB,YAAc,+B,qBCAxGD,EAAOC,QAAU,CAAC,YAAc,6B,gBCAhCD,EAAOC,QAAU,CAAC,OAAS,+B,oKCWZC,MARf,YAA2B,IAATC,EAAQ,EAARA,KAChB,OAAO,wBAAIC,UAAWC,IAAOC,aAAcH,I,gBCiC9BI,EAjCI,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAExC,OACE,6BACE,kBAAC,EAAD,CAAOR,KAAK,eACZ,wBAAIC,UAAWC,IAAOO,UACpB,wBAAIR,UAAWC,IAAOQ,UACpB,wCACA,8BAAOL,IAET,wBAAIJ,UAAWC,IAAOQ,UACpB,2CACA,8BAAOJ,IAET,wBAAIL,UAAWC,IAAOQ,UACpB,uCACA,8BAAOH,KAGX,uBAAGN,UAAWC,IAAOS,WAArB,sBACqB,8BAnBMC,KAAKC,MAAOR,EAAOG,EAAS,KAmBlC,Q,gBCbZM,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,uBAAGd,UAAWC,IAAOc,QAASD,I,gBCgCxBE,EAjCC,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,cAAeC,EAAY,EAAZA,MACzC,OACE,yBAAKnB,UAAWC,IAAOmB,WACpBH,EAAQI,KAAI,SAAAC,GAAI,OACf,4BACEtB,UAAWC,IAAOsB,OAClBC,IAAKF,EACLG,KAAK,SACLC,KAAMJ,EACNK,QAAS,SAAAC,GAAC,OAAIV,EAAcU,KAE3BN,MAGL,4BACEtB,UAAWC,IAAO4B,YAClBJ,KAAK,SACLE,QAAS,kBAAMR,MAHjB,WCZeW,E,4MACnBC,MAAQ,CACN3B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP0B,eAAiB,WAAO,IAAD,EACU,EAAKD,MACpC,OAFqB,EACb3B,KADa,EACPC,QADO,EACEC,K,EAIzBY,cAAgB,YAAiB,IACvBQ,EADsB,EAAbO,OACTP,KACR,EAAKQ,UAAS,SAAAC,GAAS,sBACpBT,EAAOS,EAAUT,U,EAItBU,cAAgB,kBAAM,EAAKF,SAAS,CAAE9B,KAAM,EAAGC,QAAS,EAAGC,IAAK,K,uDAErD,IAAD,EACuB+B,KAAKN,MAA5B3B,EADA,EACAA,KAAMC,EADN,EACMA,QAASC,EADf,EACeA,IACvB,OACE,6BACE,kBAAC,EAAD,CAAOP,KAAK,0BACZ,kBAAC,EAAD,CACEkB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,cAAemB,KAAKnB,cACpBC,MAAOkB,KAAKD,gBAEbC,KAAKL,iBAAmB,EACvB,kBAAC,EAAD,CACE5B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO8B,KAAKL,mBAGd,kBAAC,EAAD,CAAclB,QAAQ,2B,GAvCCwB,aCFjCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.668a2def.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statictics_statList__2F838\",\"statItem\":\"Statictics_statItem__dfBt9\",\"statTotal\":\"Statictics_statTotal__kBieu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxButton\":\"Buttons_boxButton__2ds7v\",\"button\":\"Buttons_button__3zj_6\",\"buttonReset\":\"Buttons_buttonReset__ZPlRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerTitle\":\"Title_headerTitle__3VZPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notifi\":\"Notification_notifi__S30GU\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Title.module.css';\n\nfunction Title ({ text }) {\n  return <h3 className={styles.headerTitle}>{text}</h3>;\n}\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statictics.module.css';\nimport Title from '../Title/Title';\n\nconst Statistics = ({ good, neutral, bad, total }) => {\n  const positiveFeedback = () => Math.round((good / total) * 100);\n  return (\n    <div>\n      <Title text='Statistics' />\n      <ul className={styles.statList}>\n        <li className={styles.statItem}>\n          <span>Good: </span>\n          <span>{good}</span>\n        </li>\n        <li className={styles.statItem}>\n          <span>Neutral: </span>\n          <span>{neutral}</span>\n        </li>\n        <li className={styles.statItem}>\n          <span>Bad: </span>\n          <span>{bad}</span>\n        </li>\n      </ul>\n      <p className={styles.statTotal}>\n        Positive feedback :<span>{positiveFeedback()}%</span>\n      </p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={styles.notifi}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Buttons.module.css';\n\nconst Buttons = ({ options, leaveFeedback, reset }) => {\n  return (\n    <div className={styles.boxButton}>\n      {options.map(item => (\n        <button\n          className={styles.button}\n          key={item}\n          type='button'\n          name={item}\n          onClick={e => leaveFeedback(e)}\n        >\n          {item}\n        </button>\n      ))}\n      <button\n        className={styles.buttonReset}\n        type='button'\n        onClick={() => reset()}\n      >\n        Reset\n      </button>\n    </div>\n  );\n};\n\nButtons.propTypes = {\n  options: PropTypes.arrayOf({\n    item: PropTypes.string.isRequired,\n  }).isRequired,\n  leaveFeedback: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import React, { Component } from 'react';\nimport Title from '../Title/Title';\nimport Statistics from '../Statistics/Statistics';\nimport Notification from '../Notification/Notification';\nimport Buttons from '../Buttons/Buttons';\n\nexport default class App extends Component {\n  state = {\n    good: 1,\n    neutral: 0,\n    bad: 0,\n  };\n\n  totalFeedbacks = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  leaveFeedback = ({ target }) => {\n    const { name } = target;\n    this.setState(prevState => ({\n      [name]: prevState[name]++,\n    }));\n  };\n\n  resetFeedback = () => this.setState({ good: 0, neutral: 0, bad: 0 });\n\n  render () {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div>\n        <Title text='Please leave feedback' />\n        <Buttons\n          options={['good', 'neutral', 'bad']}\n          leaveFeedback={this.leaveFeedback}\n          reset={this.resetFeedback}\n        />\n        {this.totalFeedbacks() > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.totalFeedbacks()}\n          />\n        ) : (\n          <Notification message='No feedback given' />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}